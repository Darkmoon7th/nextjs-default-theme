---
description: 
globs: 
alwaysApply: true
---
# Project Documentation Overview

This directory contains documentation for the coding standards, architecture patterns, and best practices used in this project. These documents serve as a single source of truth for ongoing development.

## Documentation Files

1. **Project Architecture** (`01-project-architecture.md`)

   - Overview of technologies: Next.js 15, React 19, Tailwind CSS 4, shadcn/ui
   - Directory structure and organization
   - Key architectural patterns
   - Examples of page and component structures

2. **Component Patterns** (`02-component-patterns.md`)

   - Types of components (UI, Section, Layout)
   - Client vs. Server components
   - Component naming conventions
   - Props patterns
   - Styling approaches

3. **Styling and Theming** (`03-styling-and-theming.md`)

   - Tailwind CSS setup and configuration
   - Design tokens and variables
   - Dark mode implementation
   - Typography configuration
   - Responsive design patterns
   - Component styling approaches

4. **Coding Style and Conventions** (`04-coding-style-and-conventions.md`)

   - TypeScript usage and patterns
   - Naming conventions for files, functions, variables
   - Code structure and organization
   - Formatting and linting rules
   - Accessibility practices
   - React patterns and best practices

5. **File Organization** (`05-file-organization.md`)
   - Directory structure
   - File naming conventions
   - Routing structure (Next.js App Router)
   - Component organization
   - Import paths and aliases
   - Asset organization
   - Configuration files

## Core Technologies

- **Next.js 15** (App Router) - Framework for React applications
- **React 19** - UI library
- **Tailwind CSS 4** - Utility-first CSS framework
- **shadcn/ui** - Accessible React components using Radix UI and styled with Tailwind
- **TypeScript** - Static typing for JavaScript
- **MDX** - Markdown for the component era
- **Cloudflare Pages** - Hosting and deployment platform
- **Selective Edge Runtime** - Used where beneficial for performance

## Key Architectural Patterns

- **App Router** - Next.js 15 routing with directory-based routing
- **Server Components** - Default in Next.js 15, with client components where needed
- **Component Hierarchy** - UI > Section > Layout > Page
- **Tailwind Styling** - Utility classes with consistent naming
- **TypeScript** - Strong typing for components, props, and functions
- **Responsive Design** - Mobile-first approach with breakpoint modifiers
- **Cloudflare Deployment** - Optimized for Cloudflare Pages with proper configuration

## Development Workflow

- Use the project structure as a guide for new components and pages
- Follow the coding standards for consistent style
- Leverage existing components before creating new ones
- Use TypeScript for type safety
- Follow accessibility best practices
- Maintain responsive design patterns
- Test deployments on Cloudflare before production releases
- Ensure Edge compatibility for all components and APIs
